#!/bin/bash

#
# MiniSymlinkProgram
#  A minimal functionality SymlinkProgram
#
# based on RescueSymlinkProgram by
# (C) 2004 Andre Detsch. Released under the GNU GPL.
#     detsch at gobolinux.org
#

scriptdir=$(readlink -f $(dirname $0))

if [ ! "$1" -o "$1" = "--help" ] 
then
   echo "MiniSymlinkProgram" 1>&2
   echo "A minimal functionality SymlinkProgram" 1>&2
   echo "Usage:   `basename $0` [--verbose] [--new-names] <program_path> <root> [cross prefix dir]" 1>&2 
   echo "Example: `basename $0` /Programs/Glibc/Current /Mount/Disk" 1>&2 
   echo "         `basename $0` /Programs/Glibc/Current /Mount/Disk /System/ARM" 1>&2 
   exit 1
fi

unset verbose
if [ "$1" = "--verbose" ]
then
    verbose=yes
    shift
fi

unset newnames
if [ "$1" = "--new-names" ]
then
    newnames=yes
    shift
fi

full_path="$1"
root="`readlink -f $2`"
crossprefixdir="$3"

if [ "$newnames" ]
then gobolinks="$crossprefixdir/System/Index"
else gobolinks="$crossprefixdir/System/Links"
fi

[ "$verbose" ] && echo " MiniSymlinkProgram: Linking ${full_path} inside ${gobolinks}" 1>&2

if [ "$verbose" ]
then
   export verboseFD=100
   export normalFD=101
   export terseFD=102
   export errorFD=103
   export debugFD=104
   export logFD=105
   export questionFD=106
else
   export verboseFD=1
   export normalFD=1
   export terseFD=1
   export errorFD=1
   export debugFD=1
   export logFD=1
   export questionFD=1
fi
eval "exec $verboseFD>/dev/null"
eval "exec $normalFD>/dev/null"
eval "exec $terseFD<&2"
eval "exec $errorFD<&2"
eval "exec $debugFD>/dev/null"
eval "exec $logFD>/dev/null"

function do_link() {
   if [ -d "$root/$1" ]
   then
      cd $root/$2
      if [ "$verbose" ]
      then goboPrefix=$root goboPrograms=$root/Programs LinkOrExpandAll $root/$1 --relative
      else goboPrefix=$root goboPrograms=$root/Programs LinkOrExpandAll $root/$1 --relative &> /dev/null
      fi
      cd - &> /dev/null
   fi
}

if [ "$newnames" ]
then
   do_link ${full_path}/bin ${gobolinks}/bin
   do_link ${full_path}/sbin ${gobolinks}/sbin
   do_link ${full_path}/Resources/Wrappers ${gobolinks}/bin
   do_link ${full_path}/lib ${gobolinks}/lib
   do_link ${full_path}/include ${gobolinks}/include
   if [ -L ${root}/${full_path}/share ]
   then do_link ${full_path}/Shared ${gobolinks}/share
   else do_link ${full_path}/share  ${gobolinks}/share
   fi
else
   do_link ${full_path}/bin ${gobolinks}/Executables
   do_link ${full_path}/sbin ${gobolinks}/Executables
   do_link ${full_path}/Resources/Wrappers ${gobolinks}/Executables
   do_link ${full_path}/lib ${gobolinks}/Libraries
   do_link ${full_path}/include ${gobolinks}/Headers
   do_link ${full_path}/Shared ${gobolinks}/Shared
fi
do_link ${full_path}/../Settings ${gobolinks}/../Settings

ln -nfs $(basename ${full_path}) $root/$(dirname ${full_path})/Current

[ "$verbose" ] && echo " MiniSymlinkProgram: Done" 1>&2

exit 0
