#!/bin/sh

[ "$goboPrograms" ] || {
   echo "Please set goboPrograms variable before running this script."
   exit 1
}

[ "$2" ] || {
   echo "Usage:   `basename $0` <package-file> <root> [cross prefix dir]"
   echo "Example: `basename $0` Glibc--2.3.2--i686.tar.bz2 /Mount/Disk/"
   echo "         `basename $0` Glibc--2.3.2--i686.tar.bz2 /Mount/Disk/ /System/ARM"
   exit 1
} 

unset realcopy
if [ "$1" = "--real-copy" ] 
then
   realcopy=yes
   shift
fi

unset verbose
if [ "$1" = "--verbose" ] 
then
   verbose=yes
   shift
fi

if [ -d "$1" ] 
then
   dir=`readlink -f "$1"`
   version=$(basename $dir)
   name=$(basename `dirname $dir`)
   unpacked=$(dirname $dir)
else
   package=`readlink -f "$1"`
   base=$(basename $package)
   name=${base%%--*}
   version=${base#*--}
   version=${version%%--*}
   unpacked=$(dirname $package)/$name
   if ! [ -d "$unpacked/$version" ]
   then
      pushd $(dirname $package) &> /dev/null
      tar xjpf "$package"
      popd &> /dev/null
   fi
fi

if ! [ -d "$unpacked" ]
then
   echo "MiniInstallPackage: error - directory $unpacked does not exist."
   exit 1
fi

crossprefixdir="$3"
root="$2/$crossprefixdir"

[ "$verbose" ] && echo "MiniInstallPackage: Installing $name version $version..."

pushd "$root/$goboPrograms" &> /dev/null
if [ "$realcopy" ]
then
   mkdir -p "$name"
   cp -aR "$unpacked/$version" "$name"
else
   mkdir -p "$name/$version"
   mount --bind "$unpacked/$version" "$name/$version"
fi

[ `ls "$name" | grep -v Settings | grep -v Variable | grep -v Current | wc -l` -gt 1 ] && {
   echo "MiniInstallPackage: too many versions inside directory $name. Bailing out."
   exit 1
}

dsettings="$name/$version/Resources/Defaults/Settings"
if [ -d "$dsettings" ]
then
   [ "$verbose" ] && echo "MiniInstallPackage: Copying default settings for $name $version"
   cp -R "$dsettings" "$name/Settings"
fi
popd &> /dev/null

MiniSymlinkProgram $goboPrograms/$name/$version $root $crossprefixdir 2>&1 | grep -v "/CVS/"
